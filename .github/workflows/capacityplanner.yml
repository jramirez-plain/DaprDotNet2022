name: capacityplanner

on:
  push:
    branches: [ "main" ]
    #paths: 
    # - "src/CapacityPlanner"
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:

  CI:
    # Build and publish docker image
    runs-on: ubuntu-latest    
    env:
      appId: 'capacityplanner'
      appRev: 'latest' #${{ github.sha }}
    steps:
    - uses: actions/checkout@v3
    - uses: azure/docker-login@v1
      with:
        login-server: jramgar.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}        
    - run: |
        docker build -t jramgar.azurecr.io/${{ env.appId }}:${{ env.appRev }} -f src/CapacityPlanner/Dockerfile ./src/. 
        docker push jramgar.azurecr.io/${{ env.appId }}:${{ env.appRev }}

  CD-ENV:
   # Create infra and publish app
    runs-on: ubuntu-latest
    env:
      cosmos_url: 'https://demodaprcrd.documents.azure.com:443/ '
      redis_host: 'dotnet2022redis.redis.cache.windows.net:6380'
      appRev: 'latest' #${{ github.sha }}
    needs: CI
    steps:    
      - uses: actions/checkout@main
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}        
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./deploy/deploy-env-components.json
          parameters: 
            environment_name=demo             
            acr_username=${{ secrets.ACR_USERNAME }} 
            acr_password=${{ secrets.ACR_PASSWORD }} 
            cosmos_masterkey=${{ secrets.AZURE_COSMOS_MASTERKEY }} 
            cosmos_url=${{ env.cosmos_url }}
            servicebus_connectionstring=${{ secrets.AZURE_SERVICEBUS_CONNECTIONSTRING }}
            redis_host=${{ env.redis_host }}
            redis_password=${{ secrets.AZURE_REDIS_PASSWORD }}
            sendgrid_apikey=${{ secrets.AZURE_SENDGRID_APIKEY }}


  CD-APP:
   # Create infra and publish app
    runs-on: ubuntu-latest
    env:      
      appRev: 'latest' #${{ github.sha }}
    needs: CD-ENV
    steps:    
      - uses: actions/checkout@main
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}        
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./deploy/deploy-app-capacityplanner.json
          parameters: 
            environment_name=demo 
            planner_rev=${{env.appRev}} 
            acr_username=${{ secrets.ACR_USERNAME }} 
            acr_password=${{ secrets.ACR_PASSWORD }}             